;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'Custom-mode-abbrev-table '())

(define-abbrev-table 'Info-edit-mode-abbrev-table '())

(define-abbrev-table 'TeX-error-overview-mode-abbrev-table '())

(define-abbrev-table 'TeX-output-mode-abbrev-table '())

(define-abbrev-table 'bibtex-mode-abbrev-table '())

(define-abbrev-table 'calendar-mode-abbrev-table '())

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'debugger-mode-abbrev-table '())

(define-abbrev-table 'diff-mode-abbrev-table '())

(define-abbrev-table 'doctex-mode-abbrev-table '())

(define-abbrev-table 'edit-abbrevs-mode-abbrev-table '())

(define-abbrev-table 'elisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("cor" "corollary" nil 3)
   ))

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'latex-mode-abbrev-table '())

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'message-mode-abbrev-table '())

(define-abbrev-table 'messages-buffer-mode-abbrev-table '())

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'org-export-stack-mode-abbrev-table '())

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("00" "$0$" nil 2)
    ("aa" "$a$" nil 69)
    ("bb" "$b$" nil 29)
    ("cc" "$c$" nil 6)
    ("dd" "$d$" nil 6)
    ("def" "definition" nil 20)
    ("ee" "$e$" nil 3)
    ("fa" "for all" nil 21)
    ("fe" "for each" nil 10)
    ("ff" "$f$" nil 10)
    ("fs" "for some" nil 10)
    ("fv" "for every" nil 8)
    ("ge" "\\ge" nil 5)
    ("gg" "$g$" nil 3)
    ("hh" "$h$" nil 1)
    ("iff" "if and only if" nil 28)
    ("ii" "$i$" nil 12)
    ("int" "integer" nil 0)
    ("ints" "integers" nil 0)
    ("jj" "$j$" nil 2)
    ("l1" "$1$" nil 10)
    ("l8" "\\infty" nil 3)
    ("lcap" "\\cap" nil 1)
    ("lcup" "\\cup" nil 5)
    ("le" "\\le" nil 29)
    ("liff" "\\iff" nil 8)
    ("lin" "\\in" nil 45)
    ("ll" "$l$" nil 4)
    ("ltimes" "\\times" nil 2)
    ("lto" "\\to" nil 53)
    ("mm" "$m$" nil 4)
    ("ne" "\\neq" nil 15)
    ("neq" "\\neq" nil 11)
    ("nn" "$n$" nil 33)
    ("pm" "\\pm" nil 8)
    ("pp" "$p$" nil 12)
    ("qq" "$q$" nil 9)
    ("rr" "$r$" nil 8)
    ("soln" "solution" nil 0)
    ("ss" "$s$" nil 2)
    ("st" "such that" nil 8)
    ("te" "there exist" nil 6)
    ("tes" "there exists" nil 5)
    ("thm" "theorem" nil 8)
    ("tt" "$t$" nil 2)
    ("uu" "$u$" nil 1)
    ("vv" "$v$" nil 0)
    ("wh" "we have" nil 2)
    ("xx" "$x$" nil 2)
    ("yy" "$y$" nil 1)
    ("zz" "$z$" nil 1)
   ))

(define-abbrev-table 'outline-mode-abbrev-table '())

(define-abbrev-table 'package-menu-mode-abbrev-table '())

(define-abbrev-table 'plain-tex-mode-abbrev-table '())

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'select-tags-table-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'slitex-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'speedbar-mode-abbrev-table '())

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'tex-mode-abbrev-table '())

(define-abbrev-table 'tex-shell-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table '())

(define-abbrev-table 'url-cookie-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-git-region-history-mode-abbrev-table '())

(define-abbrev-table 'xref--xref-buffer-mode-abbrev-table '())

